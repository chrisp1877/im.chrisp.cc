{"expireTime":9007200835117233000,"key":"gatsby-plugin-mdx-entire-payload-697f1c684363031a23246f8414acf893-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Sorry these layouts are broken as hell","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":39,"offset":38},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":39,"offset":38},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I will","position":{"start":{"line":3,"column":1,"offset":40},"end":{"line":3,"column":7,"offset":46},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":40},"end":{"line":3,"column":7,"offset":46},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"fix","position":{"start":{"line":4,"column":3,"offset":49},"end":{"line":4,"column":6,"offset":52},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":49},"end":{"line":4,"column":6,"offset":52},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":47},"end":{"line":4,"column":6,"offset":52},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"it","position":{"start":{"line":5,"column":3,"offset":55},"end":{"line":5,"column":5,"offset":57},"indent":[]}}],"position":{"start":{"line":5,"column":3,"offset":55},"end":{"line":5,"column":5,"offset":57},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":53},"end":{"line":5,"column":5,"offset":57},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"later","position":{"start":{"line":6,"column":3,"offset":60},"end":{"line":6,"column":8,"offset":65},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":60},"end":{"line":6,"column":8,"offset":65},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":58},"end":{"line":6,"column":8,"offset":65},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":47},"end":{"line":6,"column":8,"offset":65},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Thanks for visiting!","position":{"start":{"line":8,"column":3,"offset":69},"end":{"line":8,"column":23,"offset":89},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":69},"end":{"line":8,"column":23,"offset":89},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":67},"end":{"line":8,"column":23,"offset":89},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"slug\":\"blog-post1\",\"path\":\"blog-post1\",\"title\":\"This is my first blog post\",\"date\":\"January 29, 2020\",\"topic\":\"testing, software, gatsby\",\"lede\":\"this is a test lede\"}","position":{"start":{"line":10,"column":1,"offset":91},"end":{"line":10,"column":198,"offset":288},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":10,"column":198,"offset":288}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"blog-post1\",\n  \"path\": \"blog-post1\",\n  \"title\": \"This is my first blog post\",\n  \"date\": \"January 29, 2020\",\n  \"topic\": \"testing, software, gatsby\",\n  \"lede\": \"this is a test lede\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Sorry these layouts are broken as hell\"), mdx(\"p\", null, \"I will\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"fix\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"later\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Thanks for visiting!\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"slug\": \"blog-post1\",\n  \"path\": \"blog-post1\",\n  \"title\": \"This is my first blog post\",\n  \"date\": \"January 29, 2020\",\n  \"topic\": \"testing, software, gatsby\",\n  \"lede\": \"this is a test lede\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Sorry these layouts are broken as hell`}</p>\n    <p>{`I will`}</p>\n    <ul>\n      <li parentName=\"ul\">{`fix`}</li>\n      <li parentName=\"ul\">{`it`}</li>\n      <li parentName=\"ul\">{`later`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Thanks for visiting!`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}